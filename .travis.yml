language: php

dist: bionic

os: linux

php: 7.4

version: ~> 1.0

services:
  - redis
  - postgresql
  - elasticsearch

addons:
  code_climate:
    repo_token: CodeClimateTokenForReplacement

cache:
  directories:
    - $HOME/.composer/cache
    - vendor

env:
  global:
    - DB=postgres
    - DEFAULT=1
    - TEST=1
    - ASYNC=0
    - FIXTURE=0

jobs:
  include:
    - name: "PHPCS"
      dist: focal
      env: PHPCS=1 DEFAULT=0 TEST=0

    - name: "Fixture Check"
      dist: focal
      env: FIXTURE=1 TEST=0
      addons:
        postgresql: "13"
        apt:
          packages:
            - postgresql-13
            - postgresql-client-13

    - name: "PHP 7.2"
      php: 7.2
      addons:
        postgresql: "11"

    - name: "PHP 7.3"
      php: 7.3
      addons:
        postgresql: "11"

    - name: "PHP 7.4 Bionic Postgres 11"
      addons:
        postgresql: "11"

    - name: "PHP 7.4 Focal Postgres 12"
      dist: focal
      addons:
        postgresql: "12"
        apt:
          packages:
            - postgresql-12

    - name: "PHP 7.4 Bionic Postgres 10"
      addons:
        postgresql: "10"

    - name: "PHP 7.4 Bionic Postgres 9.6"
      addons:
        postgresql: "9.6"

# Removed as Queue is currently unable to work on Travis Env
#    - name: "PHP 7.4 ASync"
#      php: 7.4
#      env: ASYNC=1

before_install:
  - if [[ $DEFAULT = 1 ]]; then export COMPOSER_PROCESS_TIMEOUT=900; fi
  - if [[ $DEFAULT = 1 ]]; then mv config/app_file.travis.php config/app_file.php; fi
  - if [[ $DEFAULT = 1 ]]; then mv config/app.travis.php config/app.php; fi
  - if [[ $DEFAULT = 1 ]]; then mv config/Environment/travis_parameters.yml config/Environment/app_parameters.yml; fi
  - if [[ $ASYNC = 0 ]]; then rm phpunit.xml.dist; fi
  - if [[ $ASYNC = 0 ]]; then mv phpunit-travis.xml.dist phpunit.xml.dist; fi

install:
  - if [[ $DEFAULT = 1 ]]; then psql --command='CREATE DATABASE leaders;' --username=postgres; fi
  - if [[ $DEFAULT = 1 ]]; then psql --command="CREATE USER app WITH PASSWORD 'cake';" --username=postgres; fi
  - composer install --no-scripts
  - composer validate

before_script:
  - if [[ $DEFAULT = 1 ]]; then composer run-script post-install-cmd --no-interaction; fi
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script:
  - if [[ $PHPCS = 1 ]]; then bin/cake code_completion generate -d; fi
  - if [[ $PHPCS = 1 ]]; then composer cs-check; fi
  - if [[ $FIXTURE = 1 ]]; then composer fixture-check; fi
  - if [[ $TEST = 1 ]]; then composer test; fi

after_success:
  - if [[ $DEFAULT = 1 ]]; then bash <(curl -s https://codecov.io/bash); fi

after_script:
  - ./cc-test-reporter after-build --coverage-input-type clover --id CodeClimateTokenForReplacement --exit-code $TRAVIS_TEST_RESULT

notifications:
  email: false

